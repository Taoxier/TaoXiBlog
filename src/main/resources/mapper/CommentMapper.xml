<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taoxier.taoxiblog.mapper.CommentMapper">

    <resultMap id="comment" type="com.taoxier.taoxiblog.model.entity.CommentEntity">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="email" column="email"/>
        <result property="content" column="content"/>
        <result property="avatar" column="avatar"/>
        <result property="createTime" column="create_time"/>
        <result property="ip" column="ip"/>
        <result property="published" column="is_published"/>
        <result property="adminComment" column="is_admin_comment"/>
        <result property="page" column="page"/>
        <result property="notice" column="is_notice"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="website" column="website"/>
        <result property="qq" column="qq"/>
        <association property="blog" javaType="com.taoxier.taoxiblog.model.vo.BlogIdAndTitleVO">
            <id property="id" column="blog_id"/>
            <result property="title" column="title"/>
        </association>
    </resultMap>

    <!--按页面和父评论id查询评论List-->
    <select id="getListByPageAndParentCommentId" resultMap="comment">
        select c.id, c.nickname, c.email, c.content, c.avatar, c.create_time, c.ip, c.is_published, c.is_admin_comment, c.page,
        c.is_notice, c.parent_comment_id, c.website, c.blog_id, c.qq, b.title
        from comment as c left join blog as b on c.blog_id=b.id
        <where>
            <if test="page!=null">
                c.page=#{page}
            </if>
            <if test="page==0 and blogId!=null">
                and c.blog_id=#{blogId}
            </if>
            and c.parent_comment_id=#{parentCommentId}
        </where>
    </select>

    <resultMap id="pageComment" type="com.taoxier.taoxiblog.model.vo.PageCommentVO">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="content" column="content"/>
        <result property="avatar" column="avatar"/>
        <result property="createTime" column="create_time"/>
        <result property="website" column="website"/>
        <result property="adminComment" column="is_admin_comment"/>
        <result property="parentCommentId" column="parent_comment_id"/>
        <result property="parentCommentNickname" column="parent_comment_nickname"/>
    </resultMap>

    <select id="getPageCommentListByPageAndParentCommentId" resultMap="pageComment">
            select c1.id, c1.nickname, c1.content, c1.avatar, c1.create_time, c1.is_admin_comment, c1.website,
            c1.parent_comment_id as parent_comment_id, c2.nickname as parent_comment_nickname
            from comment as c1 left join comment as c2 on c1.parent_comment_id=c2.id
            where c1.page=#{page}
            <if test="page==0 and blogId!=null">
                and c1.blog_id=#{blogId}
            </if>
            and c1.parent_comment_id=#{parentCommentId}
            and c1.is_published=true
            order by c1.create_time desc
    </select>

    <!--按id查询评论-->
    <select id="getCommentById" resultMap="comment">
            select c.id, c.nickname, c.email, c.content, c.avatar, c.create_time, c.ip, c.is_published, c.is_admin_comment, c.page,
                   c.is_notice, c.parent_comment_id, c.website, c.qq, c.blog_id, b.title
            from comment as c left join blog as b on c.blog_id=b.id
            where c.id=#{id}
    </select>



</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taoxier.taoxiblog.mapper.BlogMapper">

    <resultMap id="blog" type="com.taoxier.taoxiblog.model.entity.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="content" column="content"/>
        <result property="description" column="description"/>
        <result property="published" column="is_published"/>
        <result property="recommend" column="is_recommend"/>
        <result property="appreciation" column="is_appreciation"/>
        <result property="commentEnabled" column="is_comment_enabled"/>
        <result property="top" column="is_top"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="views" column="views"/>
        <result property="words" column="words"/>
        <result property="readTime" column="read_time"/>
        <result property="password" column="password"/>
        <association property="user" javaType="com.taoxier.taoxiblog.model.entity.User">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
            <result property="nickname" column="nickname"/>
            <result property="avatar" column="avatar"/>
            <result property="email" column="email"/>
            <result property="createTime" column="user_create_time"/>
            <result property="updateTime" column="user_update_time"/>
            <result property="role" column="role"/>
        </association>
        <association property="category" javaType="com.taoxier.taoxiblog.model.entity.Category">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
        </association>
        <collection property="tags" javaType="com.taoxier.taoxiblog.model.entity.Tag">
            <id property="id" column="tag_id"/>
            <result property="name" column="tag_name"/>
            <result property="color" column="color"/>
        </collection>
    </resultMap>


    <!--按标题和分类查询博客List-->
    <select id="getListByTitleAndCategoryId" resultMap="blog">
        <bind name="titlePattern" value="'%' + title + '%'"/>
        select b.id, b.title, b.first_picture, b.create_time, b.update_time, b.is_published, b.is_recommend, b.is_appreciation,
        b.is_comment_enabled, b.is_top, b.password,
        c.id as category_id, c.category_name
        from blog as b left join category as c on b.category_id=c.id
        <where>
            <if test="categoryId!=null">
                b.category_id=#{categoryId}
            </if>
            <if test="title!=null and title!=''">
                and b.title like #{titlePattern}
            </if>
        </where>
    </select>

    <resultMap id="blogInfo" type="com.taoxier.taoxiblog.model.vo.BlogInfoVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="createTime" column="create_time"/>
        <result property="views" column="views"/>
        <result property="words" column="words"/>
        <result property="readTime" column="read_time"/>
        <result property="top" column="is_top"/>
        <result property="password" column="password"/>
        <association property="category" javaType="com.taoxier.taoxiblog.model.entity.Category">
            <result property="name" column="category_name"/>
        </association>
        <collection property="tags" javaType="com.taoxier.taoxiblog.model.entity.Tag">
            <id property="id" column="tag_id"/>
            <result property="name" column="tag_name"/>
            <result property="color" column="color"/>
        </collection>
    </resultMap>

    <!--查询公开博客的简要信息-->
    <select id="getBlogInfoListByIsPublished" resultMap="blogInfo">
        select b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name
        from blog as b left join category as c on b.category_id=c.id
        where b.is_published=true
    </select>

    <!--根据标签name查询公开博客List-->
    <select id="getBlogInfoListByCategoryNameAndIsPublished" resultMap="blogInfo">
        select b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name
        from category as c left join blog as b on b.category_id=c.id
        where c.category_name=#{categoryName} and b.is_published=true
    </select>

    <select id="getBlogInfoListByTagNameAndIsPublished" resultMap="blogInfo">
        select b.id, b.title, b.description, b.is_top, b.create_time, b.views, b.words, b.read_time, b.password, c.category_name
        from (((tag as t left join blog_tag as bt on t.id=bt.tag_id) left join blog as b on bt.blog_id=b.id) left join category as c on b.category_id=c.id)
        where t.tag_name=#{tagName} and b.is_published=true
    </select>

    <!--查询公开博客年月List-->
    <select id="getGroupYearMonthByIsPublished" resultType="java.lang.String">
        select date_format(create_time, "%Y年%m月")
        from blog
        where is_published=true
        group by date_format(create_time, "%Y年%m月")
        order by date_format(create_time, "%Y年%m月") desc
    </select>

    <!--按年月查询公开博客简要信息List-->
    <select id="getArchiveBlogListByYearMonthAndIsPublished" resultType="com.taoxier.taoxiblog.model.vo.ArchiveBlogVO">
        select id, title, password, date_format(create_time, "%d日") as create_day
        from blog
        where date_format(create_time, "%Y年%m月")=#{yearMonth} and is_published=true
        order by create_time desc
    </select>

    <resultMap id="blogDetail" type="com.taoxier.taoxiblog.model.vo.BlogDetailVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="appreciation" column="is_appreciation"/>
        <result property="commentEnabled" column="is_comment_enabled"/>
        <result property="top" column="is_top"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="views" column="views"/>
        <result property="words" column="words"/>
        <result property="readTime" column="read_time"/>
        <result property="password" column="password"/>
        <association property="category" javaType="com.taoxier.taoxiblog.model.entity.Category">
            <result property="name" column="category_name"/>
        </association>
        <collection property="tags" javaType="com.taoxier.taoxiblog.model.entity.Tag">
            <result property="name" column="tag_name"/>
            <result property="color" column="color"/>
        </collection>
    </resultMap>

    <!--按id查询公开博客-->
    <select id="getBlogDetailByIdAndIsPublished" resultMap="blogDetail">
        select b.id, b.title, b.content, b.is_appreciation, b.is_comment_enabled, b.is_top,
               b.create_time, b.update_time, b.views, b.words, b.read_time, b.password,
               c.category_name,
               t.tag_name as tag_name, t.color
        from (((blog as b left join category as c on b.category_id=c.id) left join blog_tag as bt on b.id=bt.blog_id) left join tag as t on bt.tag_id=t.id)
        where b.id=#{id} and b.is_published=true
    </select>

    <resultMap id="categoryBlogCount" type="com.taoxier.taoxiblog.model.vo.CategoryBlogCountVO">
        <id property="id" column="category_id"/>
        <result property="value" column="blog_count"/>
    </resultMap>

    <!--查询每个分类的博客数量-->
    <select id="getCategoryBlogCountList" resultMap="categoryBlogCount">
            select category_id, count(category_id) as blog_count from blog group by category_id
    </select>

    <select id="getBlogById" resultMap="blog">
        select
            b.id, b.title, b.first_picture, b.content, b.description,
            b.is_recommend, b.is_published, b.is_appreciation,
            b.is_comment_enabled, b.is_top, b.create_time, b.update_time,
            b.views, b.words, b.read_time, b.password,
            c.id as category_id, c.category_name,
            t.id as tag_id, t.tag_name as tag_name, t.color
        from blog b
                 left join category c on b.category_id = c.id
                 left join blog_tag bt on b.id = bt.blog_id
                 left join tag t on bt.tag_id = t.id
        where b.id = #{id}
    </select>

    <!--维护 blog_tag 表(删除)-->
    <delete id="deleteBlogTagByBlogId">
        delete from blog_tag where blog_id=#{blogId}
    </delete>

</mapper>